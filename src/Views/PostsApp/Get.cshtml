@model PostsModel
@{
    Title = Model.App.Name;
}

<div class="cover cover-bg cover-under-navbar">
    <div class="text-center my-4" style="padding-bottom:2.5rem;">
        @WeavyContext.Space.AvatarImg(128)
    </div>
    <div class="facepile">
        @Model.Members.Facepile(size:32, link:true, presence : true)

        @if (WeavyContext.Space.IsMember) {
            if (WeavyContext.Space.HasPermission(Permission.AddMembers)) {
                <button type="button" class="btn btn-round btn-primary btn-sm" data-toggle="modal" data-target="#add-dialog" data-keyboard="true" title="Add/invite members">@Html.SvgIcon("plus")</button>
            }
        } else if (WeavyContext.Space.HasPermission(Permission.Join)) {
            var pending = SpaceService.HasPendingMembershipRequest(WeavyContext.Space.Id);
            if (pending) {
                <form action="@(Url.Action<SpaceController>(c => c.Leave(WeavyContext.Space.Id)))" method="post" data-turboform>
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button type="submit" class="btn btn-round btn-primary btn-sm" style="background: radial-gradient(rgba(@Theme.PrimaryColor().R, @Theme.PrimaryColor().G, @Theme.PrimaryColor().B, .9), rgba(@Theme.PrimaryColor().R, @Theme.PrimaryColor().G, @Theme.PrimaryColor().B, .5)), url(@User.AvatarUrl()); background-size: cover;" title="Undo membership request">@Html.SvgIcon("account-minus")</button>
                </form>
            } else {
                <form action="@(Url.Action<SpaceController>(c => c.Join(WeavyContext.Space.Id)))" method="post" data-turboform>
                    <button type="submit" class="btn btn-round btn-primary btn-sm" style="background: radial-gradient(rgba(@Theme.PrimaryColor().R, @Theme.PrimaryColor().G, @Theme.PrimaryColor().B, .9), rgba(@Theme.PrimaryColor().R, @Theme.PrimaryColor().G, @Theme.PrimaryColor().B, .5)), url(@User.AvatarUrl()); background-size: cover;" title="Join space">@Html.SvgIcon("account-plus", "white")</button>
                </form>
            }
        }
    </div>
</div>

<div class="container my-4">
    @if (!WeavyContext.Space.Description.IsNullOrEmpty()) {
        <p class="lead text-center text-muted mb-2">@WeavyContext.Space.Description</p>
    }
    <p class="small text-center text-muted">
        <a href="@(Url.Action<SpaceController>(c=>c.Members(WeavyContext.Space.Id, null, null)))">@Model.Members.TotalCount.SingularizeOrPluralize("member", "members")</a>@(" · " + WeavyContext.Space.Privacy.GetDisplayName())
    </p>

    @if (!WeavyContext.Space.IsMember && SpaceService.HasPendingMembershipRequest(WeavyContext.Space.Id)) {
        <div class="alert alert-info d-flex">
            @Html.SvgIcon("information", size: 36, htmlAttributes: new { @class = "align-self-start flex-noscale mt-1 mr-2" })
            <span>Your membership request is waiting for approval.</span>
        </div>
    }

    @if (Model.App.HasPermission(Permission.Post)) {
        <form class="card card-weavy-editor post-form" action="@(Url.Action<PostController>(c => c.Insert(Model.App.Id, null)))" method="post">
            <textarea id="text" class="form-control" name="text" data-editor-location="discuss"></textarea>
            <input type="hidden" name="hasContext" id="hasContext" value="true" />
            <input type="hidden" name="contextUrl" id="contextUrl" />
            <input type="hidden" name="contextTitle" id="contextTitle" />
            <div class="post-backdrop"></div>
        </form>
    }

    @if (WeavyContext.Space.HasPermission(Permission.List)) {        
        <div id="infinite-scroll-target" class="posts">
            @Html.Partial("_Posts", Model.Posts)
        </div>
        @Html.ScrollMore(Model.Posts)
    }
</div>

@section footer {
    @{
        Html.RenderPartial("_FeedbackModal");
        Html.RenderPartial("_EditPostModal");
        Html.RenderPartial("_MovePostModal");
        Html.RenderPartial("_EditCommentModal");
    }
}
