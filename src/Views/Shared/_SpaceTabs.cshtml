@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;

@if (WeavyContext.Space.HasPermission(Permission.List)) {
    var apps = AppService.GetApps(WeavyContext.Space.Id).ToList();

    string sortableOptions = new {
        items = ".nav-link",
        forcePlaceholderSize = true,
        sortField = "input[type=hidden]",
        ajaxPost = Url.Action(nameof(AppController.Sort), typeof(AppController).ControllerName(), new { id = WeavyContext.Space.Id })
    }.SerializeToJson(Formatting.None, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() });

    bool hasAllAppsEdit = apps.All(x => x.HasPermission(Permission.Edit));
    bool hasAppsEdit = WeavyContext.Space.HasPermission(Permission.Apps);

<nav class="nav nav-tabs" @if (hasAllAppsEdit) { <text> data-sortable="@sortableOptions" </text> }>
    @for (int i = 0; i < apps.Count(); i++) {
        var app = apps[i];
        string active = app.Id == WeavyContext.App?.Id ? "active" : "";

        <a href="@app.Url()" class="nav-link @active" title="@(app.MetaData()?.Name)">
            <span>@app.Name</span>
            @Html.HiddenFor(x => apps[i].Id)
        </a>

    }

    @if (WeavyContext.App != null) {
        <div class="ml-auto my-2 px-1">
            @Html.Partial("_AppMenu", WeavyContext.App)
        </div>
    } else if (hasAppsEdit) {
        <a href="@(Url.Action<AppController>(c => c.Add(WeavyContext.Space.Id)))" class="nav-link" data-toggle="modal" data-target="#ajax-modal" data-path="@(Url.Action<AppController>(c => c.Add(WeavyContext.Space.Id)))" data-title="Add tab" title="Add tab">@Html.SvgIcon("plus") <span>Add tab</span></a>
    }


</nav>
}
